AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Owncast server for # project name

Parameters:
  Project:
    Type: String
  NodeEnv:
    Type: String

Resources:
  # Attach ssm policy to role
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  # Create instance profile with above role
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Owncast server
      VpcId: 
        Fn::ImportValue:
          VpcId
      SecurityGroupIngress:
        - Description: 'Configure inbound https to instance (ipv4)'
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - Description: 'Configure inbound https to instance (ipv6)'
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: ::/0
        - Description: 'Configure inbound ssm to instance'
          IpProtocol: tcp
          FromPort: 21
          ToPort: 21
          CidrIp: 0.0.0.0/0
        - Description: 'Configure inbound owncast admin port'
          IpProtocol: tcp
          FromPort: 1935
          ToPort: 1935
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${Project}-${NodeEnv}-owncast-security-group'

  LaunchTemplate:
    DependsOn: SecurityGroup
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${Project}-${NodeEnv}-owncast-launch-template'
      LaunchTemplateData:
        ImageId: ami-082b1f4237bd816a1
        InstanceType: t3.medium
        KeyName: !Sub '${Project}-${NodeEnv}-keypair'
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        NetworkInterfaces:
          - AssociatePublicIpAddress: false
            DeleteOnTermination: true
            DeviceIndex: 0
            Groups:
              - !GetAtt SecurityGroup.GroupId
            SubnetId:
              Fn::ImportValue:
                PrivateSubnetId
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              DeleteOnTermination: true
              Encrypted: false
              VolumeSize: 30
              VolumeType: gp2
        UserData:
          Fn::Base64: !Sub |
            sudo su
            cd /
            sudo apt update

            # install nginx
            sudo apt install nginx -y 

            # install wget
            sudo apt install wget -y

            # install curl and nvm
            sudo apt install curl -y
            curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
            nvm install v16
            nvm use v16

            # install pm2
            npm install pm2 -g

            # install owncast
            sudo wget https://owncast.online/install.sh
            sudo bash install.sh
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${Project}-${NodeEnv}-owncast'

  Instance:
    DependsOn: LaunchTemplate
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber


